#!/bin/bash
# echo "$(date) .xprofile" >> /var/tmp/x

## ENV
export PATH="/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin"
export PATH="$PATH:$HOME/bin"
# export PATH="$PATH:/opt/ghc/bin"
# export PATH="$PATH:$HOME/.cabal/bin"
# export PATH="$PATH:$HOME/.local/bin"
# export PATH="$PATH:/opt/fvwm3/bin"
# export PATH="$PATH:/opt/awesome/usr/local/bin"
# export PATH="$PATH:/opt/rofi/bin"
# PATH=$(echo "$PATH" | awk -v RS=':' -v ORS=":" '!a[$1]++')

export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LC_TIME="en_DK.UTF-8"

export GTK_THEME=Solarized-Light
export GTK2_RC_FILES=$HOME/.themes/Solarized-Light/

## xhost
xhost +0
xhost +localhost
xhost +$(hostname)
xhost local:root

## turn off screen saver
xset s blank

## screen saver starts after 10 minutes
xset s 600 2

## enable DPMS (Enery Star) parameters
xset +dpms

## screen options
xset dpms 1200 1560 1800

## mouse acceleration
xset m 1

# ## font path
# # xset fp+ unix/:7101
# # xset fp rehash

## enable numlock at start
if [ -x /usr/bin/numlockx ];
then
    /usr/bin/numlockx on
fi

## disable bell
xset -b

## mouse cursor
xsetroot -cursor_name left_ptr

# ## syndaemon - a program that monitors keyboard activity and disables the touchpad when the keyboard is being used.
# # syndaemon -i 1 -d

# ## touchpad on
# synclient TouchpadOff=0

## screen_toggle.sh
[[ -e ~/bin/screen.toggle.sh ]] && ~/bin/screen.toggle.sh -x

## xrdb
# [[ ! -e ~/.Xdefaults ]] && cd ~/ && ln -s .Xdefaults.ansi .Xdefaults
# [[ ! -e ~/.Xdefaults ]] && cd ~/ && ln -s .Xdefaults.solarized.dark .Xdefaults
[[ ! -e ~/.Xdefaults ]] && cd ~/ && ln -s .Xdefaults.solarized.light .Xdefaults
xrdb -load ~/.Xdefaults
xrdb -merge ~/.Xdefaults

## setxkbmap
# setxkbmap -rules xorg -model pc105 -layout hr_US -option ""
setxkbmap -model pc105 -option 'eurosign:e,lv3:ralt_switch,compose:caps' 'hr(us)'

## xautolock
xautolock -time 10 -locker "~/bin/exit.sh lock" -corners +000 -cornerdelay 1 -cornerredelay 15 &

## Urxvt daemon
function __urxvtd()
{
    urxvtd_detect=$(ps -ef | grep -v "grep" | grep "urxvtd" | wc -l)

    if [[ ${urxvtd_detect} -eq 0 ]]
    then
        echo "# /usr/bin/urxvtd -q -f -o"
        [[ -e /usr/bin/urxvtd ]] && /usr/bin/urxvtd -q -f -o
    else
        echo "urxvtd is running"
    fi
}
__urxvtd

## redshift
function __redshift()
{
    redshift_detect=$(ps -ef | grep -v "grep" | grep "redshift" | wc -l)

    if [[ ${redshift_detect} -eq 0 ]]
    then
        echo "# /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &"
        # [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.ansi.conf redshift.conf && cd -
        # [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.solarized.dark.conf redshift.conf && cd -
        # [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.solarized.light.conf redshift.conf && cd -
        [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.gruvbox.conf redshift.conf && cd -
        # [[ -e /usr/bin/redshift ]] && /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &
        ####
        [[ "$(hostname)" == "entd0001" ]] && /usr/bin/redshift -l 45.8:16.0 -t 6500:5000 -b 0.7:0.7 2>&1 &
        [[ "$(hostname)" == "elx-5cg11804dr" ]] && /usr/bin/redshift -l 45.8:16.0 -t 6500:5000 -b 0.7:0.7 2>&1 &
        [[ "$(hostname)" == "dle5570" ]] && /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &
        [[ "$(hostname)" == "hp8560w" ]] && /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &
        [[ "$(hostname)" == "dle6440" ]] && /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &
    else
        echo "redshift is running"
    fi
}
__redshift

## compton
function __compton()
{
    compton_detect=$(ps -ef | grep -v "grep" | egrep "compton|picom" | wc -l)

    if [[ ${compton_detect} -eq 0 ]]
    then
        [[ "$(hostname)" == "elx-5cg11804dr" ]] && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        [[ "$(hostname)" == "entd0001" ]] && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        [[ "$(hostname)" == "dle5570" ]] && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        [[ "$(hostname)" == "hp8560w" ]] && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        [[ "$(hostname)" == "dle6440" ]] && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        ####
        # [[ -e /usr/bin/compton ]] && [[ ! -e /usr/bin/picom ]] && [[ ! /opt/picom/bin/picom ]] && /usr/bin/compton --config ~/.config/compton.conf -b
        ####
        # [[ "$(hostname)" == "elx711804dr" ]] && /opt/picom/bin/picom \
        #   -cfF -o 0.38 -O 200 -I 200 -t 0 -l 0 -r 3 -D2 -m 0.88 \
        #   --opacity-rule '99:class_g = "St" && focused' --opacity-rule '80:class_g = "St" && !focused' \
        #   --opacity-rule '99:class_g = "URxvt" && focused' --opacity-rule '80:class_g = "URxvt" && !focused' \
        #   --opacity-rule '99:class_g = "Alacritty" && focused' --opacity-rule '80:class_g = "Alacritty" && !focused' \
        #   --config /dev/null -b
    else
        echo "compton|picom is running"
    fi
}
__compton

## Clean .xsesssion-errors
echo "" > ~/.xsession-errors

#### END
