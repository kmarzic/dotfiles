#!/bin/bash
# echo "$(date) .xprofile" >> /var/tmp/x

###############################################################################
#### Environment
###############################################################################

export PATH="/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin"
export PATH="$PATH:$HOME/bin"
# export PATH="$PATH:/opt/ghc/bin"
# export PATH="$PATH:$HOME/.cabal/bin"
# export PATH="$PATH:$HOME/.local/bin"
# export PATH="$PATH:/opt/fvwm3/bin"
# export PATH="$PATH:/opt/awesome/usr/local/bin"
# export PATH="$PATH:/opt/rofi/bin"
# PATH=$(echo "$PATH" | awk -v RS=':' -v ORS=":" '!a[$1]++')

export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LC_TIME="en_DK.UTF-8"

# export QT_AUTO_SCREEN_SCALE_FACTOR=1
# export GDK_SCALE=2
# # export GDK_DPI_SCALE=0.5
# export GDK_DPI_SCALE=1


###############################################################################
#### Functions
###############################################################################

#### xhost
function __xhost()
{
    xhost +0
    xhost +localhost
    xhost +$(hostname)
    xhost local:root
}

#### xset
function __xset()
{
    ## turn off screen saver
    xset s blank

    ## screen saver starts after 10 minutes
    xset s 600 2

    ## enable DPMS (Enery Star) parameters
    xset +dpms

    ## screen options
    xset dpms 1200 1560 1800

    ## mouse acceleration
    xset m 1

    # ## font path
    # # xset fp+ unix/:7101
    # # xset fp rehash

    ## disable bell
    xset -b
}

#### xsetroot
function __xsetroot()
{
    ## mouse cursor
    xsetroot -cursor_name left_ptr
}

#### setxkbmap
function __setxkbmap()
{
    #### enable numlock at start
    if [ -x /usr/bin/numlockx ]
    then
        /usr/bin/numlockx on
    fi

    #### syndaemon - a program that monitors keyboard activity and disables the touchpad when the keyboard is being used.
    # # syndaemon -i 1 -d

    #### touchpad on
    # synclient TouchpadOff=0

    # setxkbmap -rules xorg -model pc105 -layout hr_US -option ""
    setxkbmap -model pc105 -option 'eurosign:e,lv3:ralt_switch,compose:caps' 'hr(us)'
}

#### xautolock
function __xautolock()
{
    xautolock -time 10 -locker "~/bin/exit.sh lock" -corners +000 -cornerdelay 1 -cornerredelay 15 &
}

#### theme
function __theme()
{
    [[ -e ~/.theme ]] && theme=$(head -1 ~/.theme)

    if [[ ! -z ${theme} ]]
    then
        echo "theme='${theme}'"

        #### ansi
        [[ "${theme}" == "ansi" ]]                          && export GTK_THEME=Yaru-Red-dark
        [[ "${theme}" == "ansi" ]]                          && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-dark

        #### base16-atelier-lakeside-light
        [[ "${theme}" == "base16-atelier-lakeside-light" ]] && export GTK_THEME=Yaru-Red-light
        [[ "${theme}" == "base16-atelier-lakeside-light" ]] && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-light

        #### base16-atelier-savanna-light
        [[ "${theme}" == "base16-atelier-savanna-light" ]]  && export GTK_THEME=Yaru-Red-light
        [[ "${theme}" == "base16-atelier-savanna-light" ]]  && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-light

        #### base16-google-light
        [[ "${theme}" == "base16-google-light" ]]           && export GTK_THEME=Yaru-Red-light
        [[ "${theme}" == "base16-google-light" ]]           && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-light

        #### base16-gruvbox-dark-soft
        [[ "${theme}" == "base16-gruvbox-dark-soft" ]]      && export GTK_THEME=gruvbox-gtk
        [[ "${theme}" == "base16-gruvbox-dark-soft" ]]      && export GTK2_RC_FILES=$HOME/.themes/gruvbox-gtk

        #### catppuccin
        [[ "${theme}" == "catppuccin" ]]                    && export GTK_THEME=Yaru-Red-dark
        [[ "${theme}" == "catppuccin" ]]                    && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-dark

        #### catppuccin.latte
        [[ "${theme}" == "catppuccin.latte" ]]              && export GTK_THEME=Yaru-Red-light
        [[ "${theme}" == "catppuccin.latte" ]]              && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-light

        #### doom-one
        [[ "${theme}" == "doom-one" ]]                      && export GTK_THEME=Yaru-Red-dark
        [[ "${theme}" == "doom-one" ]]                      && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-dark

        #### dracula
        [[ "${theme}" == "dracula" ]]                       && export GTK_THEME=Dracula
        [[ "${theme}" == "dracula" ]]                       && export GTK2_RC_FILES=$HOME/.themes/Dracula

        #### everforest.dark
        [[ "${theme}" == "everforest.dark" ]]               && export GTK_THEME=Everforest-Dark-Medium-B-LB
        [[ "${theme}" == "everforest.dark" ]]               && export GTK2_RC_FILES=$HOME/.themes/Everforest-Dark-Medium-B-LB

        #### everforest.light
        [[ "${theme}" == "everforest.light" ]]              && export GTK_THEME=Everforest-Light-B-LB
        [[ "${theme}" == "everforest.light" ]]              && export GTK2_RC_FILES=$HOME/.themes/Everforest-Light-B-LB

        #### lucario
        [[ "${theme}" == "lucario" ]]                       && export GTK_THEME=Yaru-Deepblue-dark
        [[ "${theme}" == "lucario" ]]                       && export GTK2_RC_FILES=$HOME/.themes/Yaru-Deepblue-dark

        #### gruvbox.dark
        [[ "${theme}" == "gruvbox.dark" ]]                  && export GTK_THEME=gruvbox-dark-gtk
        [[ "${theme}" == "gruvbox.dark" ]]                  && export GTK2_RC_FILES=$HOME/.themes/gruvbox-dark-gtk

        #### gruvbox.light
        [[ "${theme}" == "gruvbox.light" ]]                 && export GTK_THEME=gruvbox-gtk
        [[ "${theme}" == "gruvbox.light" ]]                 && export GTK2_RC_FILES=$HOME/.themes/gruvbox-gtk

        #### monokai
        [[ "${theme}" == "monokai" ]]                       && export GTK_THEME=Yaru-Red-dark
        [[ "${theme}" == "monokai" ]]                       && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-dark

        #### nord.dark
        [[ "${theme}" == "nord.dark" ]]                     && export GTK_THEME=Nordic-bluish-accent-standard-buttons-v40
        [[ "${theme}" == "nord.dark" ]]                     && export GTK2_RC_FILES=$HOME/.themes/Nordic-bluish-accent-standard-buttons-v40

        #### papercolor.light
        [[ "${theme}" == "papercolor.light" ]]              && export GTK_THEME=Yaru-Blue-light
        [[ "${theme}" == "papercolor.light" ]]              && export GTK2_RC_FILES=$HOME/.themes/Yaru-Blue-light

        #### selenized.dark
        [[ "${theme}" == "selenized.dark" ]]                && export GTK_THEME=NumixSolarizedDarkRed
        [[ "${theme}" == "selenized.dark" ]]                && export GTK2_RC_FILES=$HOME/.themes/NumixSolarizedDarkRed

        #### selenized.light
        [[ "${theme}" == "selenized.light" ]]               && export GTK_THEME=Yaru-Blue-light
        [[ "${theme}" == "selenized.light" ]]               && export GTK2_RC_FILES=$HOME/.themes/Yaru-Blue-light

        #### selenized.white
        [[ "${theme}" == "selenized.white" ]]               && export GTK_THEME=Yaru-Red-light
        [[ "${theme}" == "selenized.white" ]]               && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-light

        #### solarized.light
        [[ "${theme}" == "solarized.light" ]]               && export GTK_THEME=NumixSolarizedLightBlue
        [[ "${theme}" == "solarized.light" ]]               && export GTK2_RC_FILES=$HOME/.themes/NumixSolarizedLightBlue

        #### solarized.dark
        [[ "${theme}" == "solarized.dark" ]]                && export GTK_THEME=NumixSolarizedDarkRed
        [[ "${theme}" == "solarized.dark" ]]                && export GTK2_RC_FILES=$HOME/.themes/NumixSolarizedDarkRed

        #### srcery
        [[ "${theme}" == "srcery" ]]                        && export GTK_THEME=Yaru-Red-dark
        [[ "${theme}" == "srcery" ]]                        && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-dark

        #### tokyo.night
        [[ "${theme}" == "tokyo.night" ]]                   && export GTK_THEME=Yaru-Red-dark
        [[ "${theme}" == "tokyo.night" ]]                   && export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-dark
    else
        export GTK_THEME=Yaru-Red-light
        export GTK2_RC_FILES=$HOME/.themes/Yaru-Red-light
    fi
}

#### screen.toggle.sh
function __screen_toggle_sh()
{
    [[ -e ~/bin/screen.toggle.sh ]] && ~/bin/screen.toggle.sh -x
}

#### xrdb
function __xrdb()
{
    # [[ ! -e ~/.Xdefaults ]] && cd ~/ && ln -s .Xdefaults.ansi .Xdefaults
    # [[ ! -e ~/.Xdefaults ]] && cd ~/ && ln -s .Xdefaults.solarized.dark .Xdefaults
    # [[ ! -e ~/.Xdefaults ]] && cd ~/ && ln -s .Xdefaults.solarized.light .Xdefaults
    # [[ ! -e ~/.Xdefaults ]] && cd ~/ && ln -s .Xdefaults.selenized.light .Xdefaults
    [[ ! -e ~/.Xdefaults ]] && cd ~/ && ln -s .Xdefaults.selenized.white .Xdefaults

    [[ -e ~/.Xdefaults ]]   && xrdb -load ~/.Xdefaults
    [[ -e ~/.Xdefaults ]]   && xrdb -merge ~/.Xdefaults
}

#### urxvt
function __urxvtd()
{
    urxvtd_detect=$(ps -ef | grep -v "grep" | grep "urxvtd" | wc -l)

    if [[ ${urxvtd_detect} -eq 0 ]]
    then
        echo "# /usr/bin/urxvtd -q -f -o"
        [[ -e /usr/bin/urxvtd ]] && /usr/bin/urxvtd -q -f -o
    else
        echo "urxvtd is running"
    fi
}

#### redshift
function __redshift()
{
    redshift_detect=$(ps -ef | grep -v "grep" | grep "redshift" | wc -l)
    [[ -e ~/.theme ]] && theme=$(head -1 ~/.theme)

    if [[ ${redshift_detect} -eq 0 ]]
    then
        echo "# /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &"

        # [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.ansi.conf redshift.conf && cd -
        # [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.solarized.dark.conf redshift.conf && cd -
        # [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.solarized.light.conf redshift.conf && cd -
        # [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.selenized.light.conf redshift.conf && cd -
        [[ ! -e ~/.config/redshift.conf ]] && cd ~/.config && rm -f redshift.conf && ln -s redshift.selenized.white.conf redshift.conf && cd -

        #### ETK
        if [[ ! -z ${theme} ]]
        then
            echo "theme='${theme}'"
            if [[ "${theme}" == "base16-atelier-lakeside-light" ]] ||
               [[ "${theme}" == "base16-atelier-savanna-light" ]] ||
               [[ "${theme}" == "base16-google-light" ]] ||
               [[ "${theme}" == "catppuccin.latte" ]] ||
               [[ "${theme}" == "everforest.light" ]] ||
               [[ "${theme}" == "gruvbox.light" ]] ||
               [[ "${theme}" == "papercolor.light" ]] ||
               [[ "${theme}" == "selenized.light" ]] ||
               [[ "${theme}" == "selenized.white" ]] ||
               [[ "${theme}" == "solarized.light" ]]
            then
                [[ "$(hostname)" == "elx-5cg4126xwd" ]] && /usr/bin/redshift -l 45.8:16.0 -t 6500:5000 -b 0.9:0.9 2>&1 &
                [[ "$(hostname)" == "entd0001" ]]       && /usr/bin/redshift -l 45.8:16.0 -t 6500:5000 -b 0.9:0.9 2>&1 &
                [[ "$(hostname)" == "entl0002" ]]       && /usr/bin/redshift -l 45.8:16.0 -t 6500:5000 -b 0.9:0.9 2>&1 &
            else
                [[ "$(hostname)" == "elx-5cg4126xwd" ]] && /usr/bin/redshift -l 45.8:16.0 -b 0.90:0.95 2>&1 &
                [[ "$(hostname)" == "entd0001" ]]       && /usr/bin/redshift -l 45.8:16.0 -b 0.90:0.95 2>&1 &
                [[ "$(hostname)" == "entl0002" ]]       && /usr/bin/redshift -l 45.8:16.0 -b 0.90:0.95 2>&1 &
            fi
        fi

        #### HOME
        [[ "$(hostname)" == "dle5570" ]] && /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &
        [[ "$(hostname)" == "hp8560w" ]] && /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &
        [[ "$(hostname)" == "dle6440" ]] && /usr/bin/redshift -c ~/.config/redshift.conf > /dev/null 2>&1 &
    else
        echo "redshift is running"
    fi
}

#### compton
function __compton()
{
    compton_detect=$(ps -ef | grep -v "grep" | egrep "compton|picom" | wc -l)

    if [[ ${compton_detect} -eq 0 ]]
    then
        #### ETK
        [[ "$(hostname)" == "elx-5cg4126xwd" ]] && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        [[ "$(hostname)" == "entd0001" ]]       && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        [[ "$(hostname)" == "entl0002" ]]       && /usr/bin/picom --config ~/.config/picom.conf.xrender -b

        #### HOME
        [[ "$(hostname)" == "dle5570" ]]        && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        [[ "$(hostname)" == "hp8560w" ]]        && /usr/bin/picom --config ~/.config/picom.conf.xrender -b
        [[ "$(hostname)" == "dle6440" ]]        && /usr/bin/picom --config ~/.config/picom.conf.xrender -b

        ####
        # [[ -e /usr/bin/compton ]] && [[ ! -e /usr/bin/picom ]] && [[ ! /opt/picom/bin/picom ]] && /usr/bin/compton --config ~/.config/compton.conf -b

        ####
        # [[ "$(hostname)" == "elx711804dr" ]] && /opt/picom/bin/picom \
        #   -cfF -o 0.38 -O 200 -I 200 -t 0 -l 0 -r 3 -D2 -m 0.88 \
        #   --opacity-rule '99:class_g = "St" && focused' --opacity-rule '80:class_g = "St" && !focused' \
        #   --opacity-rule '99:class_g = "URxvt" && focused' --opacity-rule '80:class_g = "URxvt" && !focused' \
        #   --opacity-rule '99:class_g = "Alacritty" && focused' --opacity-rule '80:class_g = "Alacritty" && !focused' \
        #   --config /dev/null -b
    else
        echo "compton|picom is running"
    fi
}


###############################################################################
#### Main
###############################################################################

__xhost
__xset
__xsetroot
__setxkbmap
__theme
__xautolock
__screen_toggle_sh
__xrdb
__urxvtd
__redshift
__compton

#### Clean .xsesssion-errors
echo "" > ~/.xsession-errors

###############################################################################
#### END
###############################################################################
